<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_add.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>